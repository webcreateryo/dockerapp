version: 2
jobs:
  build:
    parameters:
      assets_precompile:
        description: "Whether or not do assets:precompile"
        type: boolean
        default: false
    docker:
      - image: circleci/ruby:2.6.3-node # バージョンについては適宜変更
        environment:
          BUNDLE_PATH: vendor/bundle
          BUNDLER_VERSION: 2.0.1
      - image: circleci/mysql:5.7
        environment:
          MYSQL_DATABASE: base_project_test
    steps:
      - run: gem install bundler -v $BUNDLER_VERSION
      - checkout
      - restore_cache:
          keys:
            - bundle-v2-{{ checksum "Gemfile.lock" }}
            - yarn-v1-{{ checksum "yarn.lock" }}
      - run: bin/bundle check || bin/bundle install --deployment
      - run:
          name: install yarn dependencies
          command: bundle exec yarn install
      - save_cache:
          key: bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          command: bin/rake db:create db:migrate
          environment:
            RAILS_ENV: test

      - run: bin/bundle exec rubocop
      - run: bin/bundle exec rails_best_practices
      - run: bundle exec brakeman -5 -A -w 1 -e -z
      - run:
          name: run tests
          command: |
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --format progress
      - store_artifacts:
          path: coverage

      - persist_to_workspace:
          root: .
          paths:
            - .

  deploy:
    docker:
      - image: circleci/ruby:2.6.3-node&nbsp;# バージョンについては適宜変更
    working_directory: /tmp/repo
    steps:
      - checkout
      - run:
          name: 'Install Heroku CLI, if necessary'
          command: |
            if [[ $(command -v heroku) == "" ]]; then
              curl https://cli-assets.heroku.com/install.sh | sh
            else
              echo "Heroku is already installed. No operation was performed."
            fi
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          name: Deploy to Heroku_Production
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build # デプロイ前に必ずテストを行う
          filters:
            branches:
              only:
                - master # masterブランチが変更された場合のみデプロイを実行
